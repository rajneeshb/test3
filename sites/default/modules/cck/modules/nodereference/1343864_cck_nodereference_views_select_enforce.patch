From b40db2f2725112da463ed111101f2bd13b4eaa02 Mon Sep 17 00:00:00 2001
From: Chris Christensen <christian.christensen@gmail.com>
Date: Tue, 22 Feb 2011 21:45:18 -0600
Subject: [PATCH] Update nodereference to support selection of enforcing the
 view on node reference types.

---
 modules/nodereference/nodereference.module |   52 ++++++++++++++++-----------
 1 files changed, 31 insertions(+), 21 deletions(-)
 mode change 100644 => 100755 modules/nodereference/nodereference.module

diff --git a/modules/nodereference/nodereference.module b/modules/nodereference/nodereference.module
old mode 100644
new mode 100755
index 1deda51..db657d9
--- a/modules/nodereference/nodereference.module
+++ b/modules/nodereference/nodereference.module
@@ -125,6 +125,13 @@ function nodereference_field_settings($op, $field) {
             '#required' => FALSE,
             '#description' => t('Provide a comma separated list of arguments to pass to the view.'),
           );
+          $form['advanced']['advanced_view_enforce_view_items'] = array(
+            '#type' => 'checkbox',
+            '#title' => t('Enforce view items in reference list.'),
+            '#default_value' => isset($field['advanced_view_enforce_view_items']) ? $field['advanced_view_enforce_view_items'] : '',
+            '#required' => FALSE,
+            '#description' => t('Provides a way for a user to see a node reference list, but allow any reference to be included.'),
+          );
         }
         else {
           $form['advanced']['no_view_help'] = array(
@@ -140,6 +147,7 @@ function nodereference_field_settings($op, $field) {
       if (module_exists('views')) {
         $settings[] = 'advanced_view';
         $settings[] = 'advanced_view_args';
+        $settings[] = 'advanced_view_enforce_view_items';
       }
       return $settings;
 
@@ -206,29 +214,31 @@ function nodereference_field($op, &$node, $field, &$items, $teaser, $page) {
       return $addition;
 
     case 'validate':
-      // Extract nids to check.
-      $ids = array();
-      foreach ($items as $delta => $item) {
-        if (is_array($item) && !empty($item['nid'])) {
-          if (is_numeric($item['nid'])) {
-            $ids[] = $item['nid'];
-          }
-          else {
-            $error_element = isset($item['_error_element']) ? $item['_error_element'] : '';
-            if (is_array($item) && isset($item['_error_element'])) unset($item['_error_element']);
-            form_set_error($error_element, t("%name: invalid input.", array('%name' => t($field['widget']['label']))));
+      if (!$field['advanced_view_enforce_view_items']) {
+        // Extract nids to check.
+        $ids = array();
+        foreach ($items as $delta => $item) {
+          if (is_array($item) && !empty($item['nid'])) {
+            if (is_numeric($item['nid'])) {
+              $ids[] = $item['nid'];
+            }
+            else {
+              $error_element = isset($item['_error_element']) ? $item['_error_element'] : '';
+              if (is_array($item) && isset($item['_error_element'])) unset($item['_error_element']);
+              form_set_error($error_element, t("%name: invalid input.", array('%name' => t($field['widget']['label']))));
+            }
           }
         }
-      }
-      // Prevent performance hog if there are no ids to check.
-      if ($ids) {
-        $refs = _nodereference_potential_references($field, '', NULL, $ids);
-        foreach ($items as $delta => $item) {
-          if (is_array($item)) {
-            $error_element = isset($item['_error_element']) ? $item['_error_element'] : '';
-            if (is_array($item) && isset($item['_error_element'])) unset($item['_error_element']);
-            if (!empty($item['nid']) && !isset($refs[$item['nid']])) {
-              form_set_error($error_element, t("%name: this post can't be referenced.", array('%name' => t($field['widget']['label']))));
+        // Prevent performance hog if there are no ids to check.
+        if ($ids) {
+          $refs = _nodereference_potential_references($field, '', NULL, $ids);
+          foreach ($items as $delta => $item) {
+            if (is_array($item)) {
+              $error_element = isset($item['_error_element']) ? $item['_error_element'] : '';
+              if (is_array($item) && isset($item['_error_element'])) unset($item['_error_element']);
+              if (!empty($item['nid']) && !isset($refs[$item['nid']])) {
+                form_set_error($error_element, t("%name: this post can't be referenced.", array('%name' => t($field['widget']['label']))));
+              }
             }
           }
         }
-- 
1.7.5.4

